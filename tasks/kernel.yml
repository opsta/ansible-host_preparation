---
- block: # Install latest kernel and check if it needs to reboot

  - name: Install latest kernel from Xenial
    package:
       name:
         - linux-generic-lts-xenial
       state: latest
    when:
      - host_preparation_install_latest_kernel | bool
      - ansible_distribution_release == 'xenial'

  - name: Install latest kernel from Bionic
    package:
       name:
         - linux-generic
       state: latest
    when:
      - host_preparation_install_latest_kernel | bool
      - ansible_distribution_release == 'bionic'

  - name: Check if a reboot is required (Ubuntu/Debian)
    stat:
      path: /var/run/reboot-required
      get_md5: no
    when: ansible_os_family == 'Debian'
    register: ubuntu_reboot_required

  - name: Check if a reboot is required (CentOS/RHEL)
    command: '/bin/needs-restarting -r'
    ignore_errors: True
    register: rhel_reboot_required

  - include_tasks: reboot.yml
    when: |
      ubuntu_reboot_required.stat.exists is defined and ubuntu_reboot_required.stat.exists == true or
      rhel_reboot_required.rc is defined and rhel_reboot_required.rc == 1

  tags:
    - host-preparation-update-kernel

- block: # Check to do autoremove and check if it needs to reboot again
  - name: Do autoremove unused packages (in this case it is old kernel)
    apt:
      autoremove: yes
    when: ansible_os_family == 'Debian'

  - name: Check if a reboot is required (Ubuntu/Debian)
    stat:
      path: /var/run/reboot-required
      get_md5: no
    when: ansible_os_family == 'Debian'
    register: ubuntu_reboot_required

  - name: Check if a reboot is required (CentOS/RHEL)
    command: '/bin/needs-restarting -r'
    ignore_errors: True
    register: rhel_reboot_required

  - include_tasks: reboot.yml
    when: |
      ubuntu_reboot_required.stat.exists is defined and ubuntu_reboot_required.stat.exists == true or
      rhel_reboot_required.rc is defined and rhel_reboot_required.rc == 1

  tags:
    - host-preparation-update-kernel
